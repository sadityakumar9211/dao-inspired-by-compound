{
  "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "party",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "term",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct ChangePresident.PresidentInfo",
          "name": "_president",
          "type": "tuple"
        }
      ],
      "name": "ValueChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieve",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "party",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "term",
              "type": "string"
            }
          ],
          "internalType": "struct ChangePresident.PresidentInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "party",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "term",
              "type": "string"
            }
          ],
          "internalType": "struct ChangePresident.PresidentInfo",
          "name": "_president",
          "type": "tuple"
        }
      ],
      "name": "store",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3c9f107a3393b358b478e59b72878e70cb5dac27a280cdf3bb581f4513d412ed",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
    "transactionIndex": 0,
    "gasUsed": "615915",
    "logsBloom": "0x
    "blockHash": "0xc33d2b17da03887a22907d473340a7fb1253a3b08671b597df1578dd7d74ecb9",
    "transactionHash": "0x3c9f107a3393b358b478e59b72878e70cb5dac27a280cdf3bb581f4513d412ed",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 8,
        "transactionHash": "0x3c9f107a3393b358b478e59b72878e70cb5dac27a280cdf3bb581f4513d412ed",
        "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xc33d2b17da03887a22907d473340a7fb1253a3b08671b597df1578dd7d74ecb9"
      }
    ],
    "blockNumber": 8,
    "cumulativeGasUsed": "615915",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "32284661fb1142f0a8ea9a1ea690790e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"party\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"term\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct ChangePresident.PresidentInfo\",\"name\":\"_president\",\"type\":\"tuple\"}],\"name\":\"ValueChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"party\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"term\",\"type\":\"string\"}],\"internalType\":\"struct ChangePresident.PresidentInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"party\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"term\",\"type\":\"string\"}],\"internalType\":\"struct ChangePresident.PresidentInfo\",\"name\":\"_president\",\"type\":\"tuple\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ChangePresident.sol\":\"ChangePresident\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/ChangePresident.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity ^0.8.8;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract ChangePresident is Ownable {\\n    struct PresidentInfo {\\n        address addr;\\n        string name;\\n        string party;\\n        string term;\\n    }\\n    \\n    PresidentInfo private s_president;\\n\\n    //emitted when the stored value changes\\n    event ValueChanged(PresidentInfo _president);\\n\\n    function store(PresidentInfo calldata _president) external onlyOwner {\\n        s_president = _president;\\n        emit ValueChanged(_president);\\n    }\\n\\n    //reads the last stored value\\n    function retrieve() public view returns (PresidentInfo memory) {\\n        return s_president;\\n    }\\n}\\n\",\"keccak256\":\"0xb2e61205e36668b31ef247601e6da2796fe63ca4bd513d82a98da73cf861abbc\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109b98061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632e64cec11461005c578063715018a61461007a5780638da5cb5b146100845780638eaee3321461009f578063f2fde38b146100b2575b600080fd5b6100646100c5565b60405161007191906104ac565b60405180910390f35b6100826102d1565b005b6000546040516001600160a01b039091168152602001610071565b6100826100ad36600461051f565b6102e5565b6100826100c0366004610576565b610337565b6100f9604051806080016040528060006001600160a01b031681526020016060815260200160608152602001606081525090565b6040805160808101909152600180546001600160a01b031682526002805460208401919061012690610593565b80601f016020809104026020016040519081016040528092919081815260200182805461015290610593565b801561019f5780601f106101745761010080835404028352916020019161019f565b820191906000526020600020905b81548152906001019060200180831161018257829003601f168201915b505050505081526020016002820180546101b890610593565b80601f01602080910402602001604051908101604052809291908181526020018280546101e490610593565b80156102315780601f1061020657610100808354040283529160200191610231565b820191906000526020600020905b81548152906001019060200180831161021457829003601f168201915b5050505050815260200160038201805461024a90610593565b80601f016020809104026020016040519081016040528092919081815260200182805461027690610593565b80156102c35780601f10610298576101008083540402835291602001916102c3565b820191906000526020600020905b8154815290600101906020018083116102a657829003601f168201915b505050505081525050905090565b6102d96103b5565b6102e3600061040f565b565b6102ed6103b5565b8060016102fa8282610742565b9050507f638388ab72ffcc18cc6a8a6d656ab5e51b47885bfd5d5770ba73eaa504468b9d8160405161032c91906108e4565b60405180910390a150565b61033f6103b5565b6001600160a01b0381166103a95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6103b28161040f565b50565b6000546001600160a01b031633146102e35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103a0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000815180845260005b8181101561048557602081850181015186830182015201610469565b81811115610497576000602083870101525b50601f01601f19169290920160200192915050565b602080825282516001600160a01b031682820152820151608060408301526000906104da60a084018261045f565b90506040840151601f19808584030160608601526104f8838361045f565b9250606086015191508085840301608086015250610516828261045f565b95945050505050565b60006020828403121561053157600080fd5b813567ffffffffffffffff81111561054857600080fd5b82016080818503121561055a57600080fd5b9392505050565b6001600160a01b03811681146103b257600080fd5b60006020828403121561058857600080fd5b813561055a81610561565b600181811c908216806105a757607f821691505b602082108114156105c857634e487b7160e01b600052602260045260246000fd5b50919050565b6000808335601e198436030181126105e557600080fd5b83018035915067ffffffffffffffff82111561060057600080fd5b60200191503681900382131561061557600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b601f82111561067c57600081815260208120601f850160051c810160208610156106595750805b601f850160051c820191505b8181101561067857828155600101610665565b5050505b505050565b67ffffffffffffffff8311156106995761069961061c565b6106ad836106a78354610593565b83610632565b6000601f8411600181146106e157600085156106c95750838201355b600019600387901b1c1916600186901b17835561073b565b600083815260209020601f19861690835b8281101561071257868501358255602094850194600190920191016106f2565b508682101561072f5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b813561074d81610561565b81546001600160a01b0319166001600160a01b03919091161781556001818101602061077b858201866105ce565b67ffffffffffffffff8111156107935761079361061c565b6107a7816107a18654610593565b86610632565b6000601f8211600181146107db57600083156107c35750838201355b600019600385901b1c1916600184901b178655610830565b600086815260209020601f19841690835b8281101561080957868501358255938701939089019087016107ec565b50848210156108265760001960f88660031b161c19848701351681555b50508683881b0186555b5050505050505061084460408301836105ce565b610852818360028601610681565b505061086160608301836105ce565b61086f818360038601610681565b50505050565b6000808335601e1984360301811261088c57600080fd5b830160208101925035905067ffffffffffffffff8111156108ac57600080fd5b80360383131561061557600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208152600082356108f581610561565b6001600160a01b031660208381019190915261091390840184610875565b6080604085015261092860a0850182846108bb565b9150506109386040850185610875565b601f19808685030160608701526109508483856108bb565b935061095f6060880188610875565b9350915080868503016080870152506109798383836108bb565b969550505050505056fea26469706673582212208a667d47e008dc7a533f60ac9c0526437f39848937e3c9778bca6052bfc18a1064736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80632e64cec11461005c578063715018a61461007a5780638da5cb5b146100845780638eaee3321461009f578063f2fde38b146100b2575b600080fd5b6100646100c5565b60405161007191906104ac565b60405180910390f35b6100826102d1565b005b6000546040516001600160a01b039091168152602001610071565b6100826100ad36600461051f565b6102e5565b6100826100c0366004610576565b610337565b6100f9604051806080016040528060006001600160a01b031681526020016060815260200160608152602001606081525090565b6040805160808101909152600180546001600160a01b031682526002805460208401919061012690610593565b80601f016020809104026020016040519081016040528092919081815260200182805461015290610593565b801561019f5780601f106101745761010080835404028352916020019161019f565b820191906000526020600020905b81548152906001019060200180831161018257829003601f168201915b505050505081526020016002820180546101b890610593565b80601f01602080910402602001604051908101604052809291908181526020018280546101e490610593565b80156102315780601f1061020657610100808354040283529160200191610231565b820191906000526020600020905b81548152906001019060200180831161021457829003601f168201915b5050505050815260200160038201805461024a90610593565b80601f016020809104026020016040519081016040528092919081815260200182805461027690610593565b80156102c35780601f10610298576101008083540402835291602001916102c3565b820191906000526020600020905b8154815290600101906020018083116102a657829003601f168201915b505050505081525050905090565b6102d96103b5565b6102e3600061040f565b565b6102ed6103b5565b8060016102fa8282610742565b9050507f638388ab72ffcc18cc6a8a6d656ab5e51b47885bfd5d5770ba73eaa504468b9d8160405161032c91906108e4565b60405180910390a150565b61033f6103b5565b6001600160a01b0381166103a95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6103b28161040f565b50565b6000546001600160a01b031633146102e35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103a0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000815180845260005b8181101561048557602081850181015186830182015201610469565b81811115610497576000602083870101525b50601f01601f19169290920160200192915050565b602080825282516001600160a01b031682820152820151608060408301526000906104da60a084018261045f565b90506040840151601f19808584030160608601526104f8838361045f565b9250606086015191508085840301608086015250610516828261045f565b95945050505050565b60006020828403121561053157600080fd5b813567ffffffffffffffff81111561054857600080fd5b82016080818503121561055a57600080fd5b9392505050565b6001600160a01b03811681146103b257600080fd5b60006020828403121561058857600080fd5b813561055a81610561565b600181811c908216806105a757607f821691505b602082108114156105c857634e487b7160e01b600052602260045260246000fd5b50919050565b6000808335601e198436030181126105e557600080fd5b83018035915067ffffffffffffffff82111561060057600080fd5b60200191503681900382131561061557600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b601f82111561067c57600081815260208120601f850160051c810160208610156106595750805b601f850160051c820191505b8181101561067857828155600101610665565b5050505b505050565b67ffffffffffffffff8311156106995761069961061c565b6106ad836106a78354610593565b83610632565b6000601f8411600181146106e157600085156106c95750838201355b600019600387901b1c1916600186901b17835561073b565b600083815260209020601f19861690835b8281101561071257868501358255602094850194600190920191016106f2565b508682101561072f5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b813561074d81610561565b81546001600160a01b0319166001600160a01b03919091161781556001818101602061077b858201866105ce565b67ffffffffffffffff8111156107935761079361061c565b6107a7816107a18654610593565b86610632565b6000601f8211600181146107db57600083156107c35750838201355b600019600385901b1c1916600184901b178655610830565b600086815260209020601f19841690835b8281101561080957868501358255938701939089019087016107ec565b50848210156108265760001960f88660031b161c19848701351681555b50508683881b0186555b5050505050505061084460408301836105ce565b610852818360028601610681565b505061086160608301836105ce565b61086f818360038601610681565b50505050565b6000808335601e1984360301811261088c57600080fd5b830160208101925035905067ffffffffffffffff8111156108ac57600080fd5b80360383131561061557600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208152600082356108f581610561565b6001600160a01b031660208381019190915261091390840184610875565b6080604085015261092860a0850182846108bb565b9150506109386040850185610875565b601f19808685030160608701526109508483856108bb565b935061095f6060880188610875565b9350915080868503016080870152506109798383836108bb565b969550505050505056fea26469706673582212208a667d47e008dc7a533f60ac9c0526437f39848937e3c9778bca6052bfc18a1064736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 400,
        "contract": "contracts/ChangePresident.sol:ChangePresident",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10098,
        "contract": "contracts/ChangePresident.sol:ChangePresident",
        "label": "s_president",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(PresidentInfo)10095_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(PresidentInfo)10095_storage": {
        "encoding": "inplace",
        "label": "struct ChangePresident.PresidentInfo",
        "members": [
          {
            "astId": 10088,
            "contract": "contracts/ChangePresident.sol:ChangePresident",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 10090,
            "contract": "contracts/ChangePresident.sol:ChangePresident",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 10092,
            "contract": "contracts/ChangePresident.sol:ChangePresident",
            "label": "party",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 10094,
            "contract": "contracts/ChangePresident.sol:ChangePresident",
            "label": "term",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      }
    }
  }
}